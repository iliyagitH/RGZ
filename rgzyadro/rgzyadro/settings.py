"""
Django settings for rgzyadro project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# Убедитесь, что этот путь верен для вашей структуры проекта
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') # Директория, куда будут собраны стат.файлы

# Настройки для медиа файлов (загружаемых пользователями)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media') # Убрано дублирование и исправлен путь, если нужно


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-_ots@axq^qe#x_nwugm7b3gx+sj=3frb=cy6pritsj$8^*u_f0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Разрешенные хосты для доступа к бэкенду (IP или домен, который вводят в браузере)
# Обязательно добавь внешний IP или домен, если обращаешься не по localhost
ALLOWED_HOSTS = ['*', 'localhost', '127.0.0.1',]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders', # Добавлен
    'api', # Твое приложение
]

# Middleware
# corsheaders.middleware.CorsMiddleware ДОЛЖЕН стоять как можно выше
MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware', # Очень важен порядок
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware', # CORS ДОЛЖЕН стоять перед этим
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Django REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    )
}

# URL Configuration
ROOT_URLCONF = 'rgzyadro.urls'

# Templates settings
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI Application
WSGI_APPLICATION = 'rgzyadro.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'baza',
        'USER': 'lutse',
        'PASSWORD': 'changeme',
        'HOST': 'localhost', # Или IP адрес вашей БД, если она не на той же машине
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# --- Настройки CORS ---
CORS_ALLOW_ALL_ORIGINS = True # Устанавливаем False, чтобы использовать список ниже
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",       
    "http://127.0.0.1:3000",       
    "http://localhost:80",         
    "http://127.0.0.1:80",       
]

# Заголовки, которые разрешено отправлять из фронтенда
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'origin',
    'user-agent',
    'x-csrftoken', # Часто нужен, если используешь CSRF защиту
]


# Если очень хочешь разрешить ВСЕ источники для отладки, можешь временно использовать:
# CORS_ALLOW_ALL_ORIGINS = True
# CORS_ALLOWED_ORIGINS = [] # Список игнорируется при True выше
# --- Конец настроек CORS ---

# Настройки для медиа файлов (загружаемых пользователями) - Дублирование убрано выше
# MEDIA_URL = '/media/'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')